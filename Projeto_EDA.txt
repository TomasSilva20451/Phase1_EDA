Programa em C

Motivação
Este projeto de avaliação de realização individual da Unidade Curricular (UC) Estruturas de Dados Avançadas
(EDA), integrada no 2º semestre do 1º ano das licenciaturas ESI/ESIPL/EIM/EEC/EDJD, visa o reforço e a aplicação
dos conhecimentos adquiridos ao longo do semestre.

Com este projeto de avaliação pretende-se sedimentar os conhecimentos relativos à definição e manipulação de
estruturas de dados dinâmicas na linguagem de programação C.
O âmbito deste projeto reside no desenvolvimento de uma solução de software na área da micromobilidade. O
crescente ecossistema de novas formas de mobilidade social, nomeadamente aquelas que ocorrem entre distâncias
curtas, tem promovido a necessária integração de múltiplos meios de deslocação. Esta transformação na forma como
a mobilidade é realizada, fator essencial para o desenvolvimento dos espaços, cidades e outros, irá depender de ações
que permitam agilizar a utilização dos meios de transporte que suportem uma mobilidade mais fácil, rápida, limpa
e económica, como por exemplo os meios de mobilidade elétrica (trotinetes, bicicletas, etc.)

Objetivo
Este documento deve ser visto como uma referência para uma abordagem clássica de desenvolvimento de uma
solução de software para um problema de dimensão média. A essência deste projeto prende-se com o
desenvolvimento de uma solução de software que permita agilizar a gestão (registo, partilha, utilização) de meios
de mobilidade urbana num contexto de uma smart-city. A implementação da solução deverá considerar estruturas
de dados dinâmicas, armazenamento em ficheiro, modularização e apresentar uma estruturação e documentação
adequadas.



Contemplando dois tipos de utilizadores, a saber, gestores e clientes registados, pretende-se considerar as
funcionalidades seguintes:
● Agilizar o aluguer dos meios de mobilidade, disponibilizando: informação sobre os meios disponíveis (tipo,
carga da bateria, custo, etc); identificar a localização dos meios existentes através de geocódigo
(what3words.com); registar o pagamento através de um saldo recarregável associado ao cliente; entre outros;
● Permitir aos responsáveis pela plataforma (gestores) a gestão dos respetivos meios de mobilidade permitindo
registar, alterar, cancelar, localizar e outros serviços;
● Admitir somente clientes registados considerando o NIF, saldo, nome, morada, etc.;
● Permitir aos gestores da plataforma a possibilidade de uma visão integrada permitindo operações como consultas de históricos, estatísticas, validações, etc.;

Fase 1
1. Definição de uma estrutura de dados dinâmica (a validar previamente com o docente), para a representação
dos meios de mobilidade elétrica, clientes e gestores;
2. Armazenamento/leitura dos dados em ficheiro de texto (valores de simulação) e binários (preservar dados);
3. Inserção de novos dados (cliente/gestor/meio de mobilidade elétrica);
4. Remoção de determinados dados (cliente/gestor/meio de mobilidade elétrica);
5. Alteração de determinados dados (cliente/gestor/meio de mobilidade elétrica);
6. Registo do aluguer de um determinado meio de mobilidade elétrica;
7. Listagem dos meios de mobilidade elétrica por ordem decrescente de autonomia;
8. Listagem dos meios de mobilidade elétrica existentes numa localização com determinado geocódigo.

Fase 2
1. Definição de uma estrutura de dados dinâmica para representação da localização de um conjunto de
clientes e meios de mobilidade elétrica, recorrendo a um grafo;
2. Armazenamento/leitura dos dados em ficheiro de texto (valores de simulação) e binários (preservar dados).
Dado a localização de um cliente, listar os meios de mobilidade elétrica de um determinado tipo existentes num determinado raio;
3. Calcular uma solução (adaptação do problema do caixeiro viajante) do trajeto com a menor distância a percorrer, com recurso a um camião, para recolha de todos os meios de mobilidade elétrica com carga da bateria abaixo de 50%. O ponto de partida e chegada é o mesmo. A capacidade de transporte do camião é limitada e dependente dos tipos de meios de mobilidade transportados, pelo que poderá ser necessário efetuar vários circuitos de modo a completar a recolha dos referidos meios de mobilidade elétrica.

Para cada fase, o trabalho desenvolvido deverá ser acompanhado de:
● Documentação de código fonte, com geração da respetiva API (ex. DoxyGen, DocX, outros)
● Utilização de ferramentas apropriadas para o controlo de versões (Git, GitHub, outras).
● Utilização de ferramentas apropriadas para a gestão do desenvolvimento (Trello, outras)

Entrega
A submissão do trabalho deverá ser efetuada através da página da unidade curricular na plataforma Moodle em conformidade com as datas seguintes:
● Fase 1: até dia 18 de março;
● Fase 2: até dia 27 de maio.
Deverá ser submetido um ficheiro ZIP com todo o material desenvolvido (código desenvolvido, documentação).

Defesa de cada fase
A defesa de cada fase é individual e obrigatória, realizando-se em data a divulgar posteriormente.

Critérios de Avaliação
Os critérios de avaliação incorporam os pontos seguintes:
● Qualidade do código desenvolvido (10%);
● Qualidade da solução desenvolvida (15% Fase 1) e qualidade da proposta de trajeto obtida (15%
Fase 2);
● Qualidade da documentação produzida (10%);
● Qualidade da defesa do projeto desenvolvido (60%);

Nota Final: O trabalho tem de respeitar as regras de boa estruturação de código. Devem utilizar bibliotecas, recorrer o uso de Patterns sempre que entenderem vantajoso, tais como programação por camadas. Não devem exagerar na utilização de funções de interação (leitura/escrita, menus). Devem simular valores para demonstrarem a aplicação, recorrendo a valores colocados em ficheiros de texto.
